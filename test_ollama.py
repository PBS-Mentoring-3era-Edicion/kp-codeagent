#!/usr/bin/env python3
"""Script r√°pido para probar Ollama directamente."""

import requests
import time
import sys

def test_ollama():
    print("üîç Probando conexi√≥n con Ollama...\n")

    # Test 1: ¬øEst√° corriendo?
    print("1. Verificando que Ollama est√© corriendo...")
    try:
        response = requests.get("http://localhost:11434/api/tags", timeout=5)
        if response.status_code == 200:
            print("   ‚úÖ Ollama est√° corriendo")
            models = response.json().get('models', [])
            print(f"   üì¶ Modelos disponibles: {[m['name'] for m in models]}")
        else:
            print(f"   ‚ùå Error: status {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
        return False

    # Test 2: Prueba simple con phi (m√°s r√°pido)
    print("\n2. Probando generaci√≥n con phi:latest (modelo peque√±o)...")
    print("   ‚è≥ Esperando respuesta (m√°ximo 60 segundos)...\n")

    start_time = time.time()
    try:
        response = requests.post(
            "http://localhost:11434/api/generate",
            json={
                "model": "phi:latest",
                "prompt": "Di 'hola' en una palabra",
                "stream": False
            },
            timeout=60
        )

        elapsed = time.time() - start_time

        if response.status_code == 200:
            result = response.json()
            print(f"   ‚úÖ Respuesta recibida en {elapsed:.1f} segundos")
            print(f"   üí¨ Respuesta: {result.get('response', 'N/A')[:100]}")
            return True
        else:
            print(f"   ‚ùå Error: status {response.status_code}")
            return False

    except requests.exceptions.Timeout:
        elapsed = time.time() - start_time
        print(f"   ‚è±Ô∏è  TIMEOUT despu√©s de {elapsed:.1f} segundos")
        print("\nüí° Sugerencias:")
        print("   - Tu sistema puede estar lento o con poca RAM")
        print("   - Intenta cerrar otros programas")
        print("   - Considera usar un modelo a√∫n m√°s peque√±o")
        return False
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("  Test de Diagn√≥stico de Ollama")
    print("=" * 60 + "\n")

    success = test_ollama()

    print("\n" + "=" * 60)
    if success:
        print("‚úÖ TODO FUNCIONA - Puedes usar kp-codeagent")
    else:
        print("‚ùå HAY PROBLEMAS - Revisa los errores arriba")
    print("=" * 60)

    sys.exit(0 if success else 1)
